{
  "name": "Ontario Education Content Pipeline",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "days",
              "daysInterval": 1
            }
          ]
        }
      },
      "id": "schedule-trigger-edu",
      "name": "Daily Update",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [250, 300],
      "disabled": true
    },
    {
      "parameters": {},
      "id": "manual-trigger-edu",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [250, 500]
    },
    {
      "parameters": {
        "jsCode": "// Ontario Grade 4 Curriculum Topics\n// Since there's no direct API, we'll generate curriculum-aligned content based on key topics\n\nconst curriculumTopics = [\n  {\n    subject: 'Science',\n    strand: 'Light and Sound',\n    topics: [\n      {\n        title: 'Properties of Light',\n        description: 'Light travels in straight lines and can be reflected',\n        bigIdea: 'How does light help us see?',\n        expectation: 'Investigate properties of light including reflection',\n        keywords: ['reflection', 'light source', 'shadow', 'mirror']\n      },\n      {\n        title: 'Sound Vibrations',\n        description: 'Sound is produced by vibrations and travels through materials',\n        bigIdea: 'How do we hear different sounds?',\n        expectation: 'Explore properties of sound including pitch and volume',\n        keywords: ['vibration', 'pitch', 'volume', 'echo']\n      }\n    ]\n  },\n  {\n    subject: 'Science',\n    strand: 'Habitats and Communities',\n    topics: [\n      {\n        title: 'Food Chains',\n        description: 'Living things depend on each other in food chains',\n        bigIdea: 'How do animals and plants depend on each other?',\n        expectation: 'Demonstrate understanding of food chains',\n        keywords: ['producer', 'consumer', 'decomposer', 'habitat']\n      },\n      {\n        title: 'Animal Adaptations',\n        description: 'Animals have special features to survive in their habitat',\n        bigIdea: 'How do Canadian animals survive winter?',\n        expectation: 'Identify adaptations that help organisms survive',\n        keywords: ['adaptation', 'camouflage', 'migration', 'hibernation']\n      }\n    ]\n  },\n  {\n    subject: 'Science',\n    strand: 'Pulleys and Gears',\n    topics: [\n      {\n        title: 'Simple Machines',\n        description: 'Pulleys and gears make work easier',\n        bigIdea: 'How do machines help us do work?',\n        expectation: 'Investigate how forces cause objects to move',\n        keywords: ['pulley', 'gear', 'force', 'motion', 'simple machine']\n      }\n    ]\n  },\n  {\n    subject: 'Science',\n    strand: 'Rocks and Minerals',\n    topics: [\n      {\n        title: 'Rock Formation',\n        description: 'Rocks form in different ways and have different properties',\n        bigIdea: 'What stories do rocks tell us?',\n        expectation: 'Describe physical properties of rocks and minerals',\n        keywords: ['igneous', 'sedimentary', 'metamorphic', 'mineral', 'erosion']\n      },\n      {\n        title: 'Canadian Mining',\n        description: 'Canada has valuable rocks and minerals',\n        bigIdea: 'What minerals come from Ontario?',\n        expectation: 'Assess impact of mining on society and environment',\n        keywords: ['mining', 'nickel', 'gold', 'environment', 'Ontario']\n      }\n    ]\n  },\n  {\n    subject: 'Mathematics',\n    strand: 'Number Sense',\n    topics: [\n      {\n        title: 'Numbers to 10,000',\n        description: 'Read, write, and order numbers up to 10,000',\n        bigIdea: 'How do we use big numbers in real life?',\n        expectation: 'Represent and compare whole numbers to 10,000',\n        keywords: ['thousands', 'place value', 'comparing', 'ordering']\n      },\n      {\n        title: 'Multiplication Facts',\n        description: 'Master multiplication facts to 7 × 7',\n        bigIdea: 'How does multiplication help us count faster?',\n        expectation: 'Recall multiplication facts to 7 × 7',\n        keywords: ['multiplication', 'times tables', 'arrays', 'groups']\n      }\n    ]\n  },\n  {\n    subject: 'Social Studies',\n    strand: 'Early Societies',\n    topics: [\n      {\n        title: 'First Nations Communities',\n        description: 'Learn about First Nations peoples in Ontario',\n        bigIdea: 'How did First Nations peoples live on this land?',\n        expectation: 'Compare aspects of life in early societies',\n        keywords: ['First Nations', 'Indigenous', 'Haudenosaunee', 'Anishinaabe', 'traditions']\n      },\n      {\n        title: 'Medieval Times',\n        description: 'Explore life in medieval times',\n        bigIdea: 'What was life like in castles?',\n        expectation: 'Describe aspects of medieval societies',\n        keywords: ['castle', 'knight', 'medieval', 'feudalism', 'craftspeople']\n      }\n    ]\n  }\n];\n\n// Select topics for this run (rotate through them)\nconst allTopics = [];\ncurriculumTopics.forEach(strand => {\n  strand.topics.forEach(topic => {\n    allTopics.push({\n      subject: strand.subject,\n      strand: strand.strand,\n      ...topic\n    });\n  });\n});\n\n// Return 5 random topics for processing\nconst selectedTopics = allTopics\n  .sort(() => Math.random() - 0.5)\n  .slice(0, 5);\n\nreturn selectedTopics.map(topic => ({\n  json: topic\n}));"
      },
      "id": "generate-curriculum-topics",
      "name": "Generate Curriculum Topics",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 400]
    },
    {
      "parameters": {
        "resource": "assistant",
        "operation": "create",
        "modelId": "gpt-3.5-turbo",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are Maple, creating Ontario Grade 4 curriculum-aligned educational content.\n\nFocus Areas:\n1. Science & Technology (Light/Sound, Habitats, Pulleys/Gears, Rocks/Minerals)\n2. Mathematics (Numbers to 10,000, Measurement, Geometry, Patterns)\n3. Language Arts (Reading, Writing, Oral Communication)\n4. Social Studies (First Nations, Medieval Times, Canadian Regions)\n\nCreate content that:\n- Directly addresses curriculum expectations\n- Uses Ontario-specific examples\n- Includes Indigenous perspectives respectfully\n- Connects to students' daily lives\n- Promotes inquiry and discovery\n\nOutput as JSON with:\n- learning_goal (specific curriculum expectation in kid-friendly language)\n- lesson_content (main concept explained for Grade 4)\n- guided_practice (teacher-led activity, 10 minutes)\n- independent_work (student activity, 15 minutes)\n- assessment_idea (how to check understanding)\n- extension_activity (for students who finish early)\n- ontario_connection (local example or reference)\n- indigenous_perspective (when appropriate)\n- vocabulary_list (3-4 key terms with simple definitions)"
            },
            {
              "role": "user",
              "content": "Create Ontario curriculum content for:\n\nSubject: {{ $json.subject }}\nStrand: {{ $json.strand }}\nTopic: {{ $json.title }}\nDescription: {{ $json.description }}\nBig Idea: {{ $json.bigIdea }}\nExpectation: {{ $json.expectation }}\nKeywords: {{ $json.keywords.join(', ') }}\n\nMake it engaging and perfectly aligned with Grade 4 expectations!"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 700
        }
      },
      "id": "openai-curriculum",
      "name": "OpenAI Curriculum Enrichment",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [650, 400],
      "credentials": {
        "openAiApi": {
          "id": "OpenAI API",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Format curriculum content for Airtable\nconst items = [];\n\nfor (const item of $input.all()) {\n  try {\n    const aiResponse = JSON.parse(item.json.response.text || '{}');\n    const originalData = item.json;\n    \n    // Extract vocabulary as a single string\n    let vocabularyString = '';\n    if (aiResponse.vocabulary_list) {\n      if (Array.isArray(aiResponse.vocabulary_list)) {\n        vocabularyString = aiResponse.vocabulary_list.join('; ');\n      } else if (typeof aiResponse.vocabulary_list === 'object') {\n        vocabularyString = Object.entries(aiResponse.vocabulary_list)\n          .map(([term, def]) => `${term}: ${def}`)\n          .join('; ');\n      } else {\n        vocabularyString = String(aiResponse.vocabulary_list);\n      }\n    }\n    \n    items.push({\n      json: {\n        // Content title\n        content_title: `${originalData.subject} - ${originalData.title}`,\n        \n        // Source information\n        source_type: 'ONTARIO_EDU',\n        source_url: 'https://www.ontario.ca/page/elementary-curriculum',\n        source_category: originalData.subject,\n        source_date: new Date().toISOString(),\n        \n        // Educational content\n        simplified_content: aiResponse.lesson_content || originalData.description,\n        curriculum_connection: aiResponse.learning_goal || originalData.expectation,\n        activity_suggestion: aiResponse.independent_work || aiResponse.guided_practice || '',\n        canadian_fact: aiResponse.ontario_connection || 'Ontario has great schools!',\n        vocabulary_word: vocabularyString || originalData.keywords.join(', '),\n        discovery_questions: JSON.stringify([\n          originalData.bigIdea,\n          'What would you like to explore about this topic?',\n          'How does this connect to your life?'\n        ]),\n        \n        // Additional curriculum fields\n        materials_needed: aiResponse.materials || 'Paper, pencil, curiosity',\n        \n        // Metadata\n        content_score: 1.0, // Curriculum content has highest score\n        has_educational_value: true,\n        appropriateness_score: 1.0,\n        workflow_version: 'ontario-edu-v1.0',\n        pipeline_timestamp: new Date().toISOString(),\n        \n        // Quality metrics\n        reading_level: 'Grade 4',\n        canadian_context: true,\n        curriculum_aligned: true,\n        validation_status: 'Approved', // Pre-approved as curriculum content\n        \n        // Categories\n        subject_areas: [originalData.subject],\n        skill_focus: ['Critical Thinking', 'Problem Solving'],\n        activity_type: ['Hands-on', 'Discussion'],\n        time_estimate: '20-30 min',\n        season_relevant: ['All Year']\n      }\n    });\n  } catch (error) {\n    console.error('Error formatting curriculum content:', error);\n  }\n}\n\nreturn items;"
      },
      "id": "format-curriculum",
      "name": "Format for Airtable",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [850, 400]
    },
    {
      "parameters": {
        "operation": "create",
        "baseId": "app1FNYWApMBYHob0",
        "tableId": "tbl3TRQh28Z2szbZe",
        "options": {}
      },
      "id": "save-curriculum",
      "name": "Save to Airtable",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [1050, 400],
      "credentials": {
        "airtableTokenApi": {
          "id": "Airtable API",
          "name": "Airtable API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Log curriculum pipeline results\nconst results = {\n  timestamp: new Date().toISOString(),\n  workflow: 'Ontario Education Content',\n  topicsProcessed: $input.all().length,\n  status: 'success',\n  topics: []\n};\n\nfor (const item of $input.all()) {\n  results.topics.push({\n    title: item.json.content_title,\n    subject: item.json.source_category,\n    saved: true\n  });\n}\n\nconsole.log('Ontario Education Pipeline Results:', results);\nreturn [results];"
      },
      "id": "log-curriculum",
      "name": "Log Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1250, 400]
    }
  ],
  "connections": {
    "Daily Update": {
      "main": [
        [
          {
            "node": "Generate Curriculum Topics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Generate Curriculum Topics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Curriculum Topics": {
      "main": [
        [
          {
            "node": "OpenAI Curriculum Enrichment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Curriculum Enrichment": {
      "main": [
        [
          {
            "node": "Format for Airtable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format for Airtable": {
      "main": [
        [
          {
            "node": "Save to Airtable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Airtable": {
      "main": [
        [
          {
            "node": "Log Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "instanceId": "maple-tutor-ontario"
  },
  "tags": []
}